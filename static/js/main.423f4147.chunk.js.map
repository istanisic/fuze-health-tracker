{"version":3,"sources":["components/AddWeightForm/AddWeightForm.js","components/AddMealForm/AddMealForm.js","components/Record/Record.js","components/List/List.js","components/OrderByDate/OrderByDate.js","Instructions.js","index.js"],"names":["AddWeightForm","_ref","onAddWeight","_useState","useState","_useState2","Object","slicedToArray","weight","setWeight","_useState3","_useState4","unit","setUnit","_useState5","_useState6","show","setShow","handleClose","convertToKg","toFixed","react_default","a","createElement","Fragment","Button_default","variant","onClick","className","Modal_default","onHide","Header","closeButton","Title","Body","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","Footer","AddMealForm","onAddMeal","meal","setMeal","Record","desc","date","convertToDate","ms","Date","month","getMonth","day","getDate","year","getFullYear","time","toLocaleTimeString","concat","aria-hidden","convertToPounds","List","records","sortBy","orderBy","b","sort","map","record","Record_Record","key","id","OrderByDate","onOrderBy","setSortBy","useEffect","Instructions","href","initialRecords","now","rootElement","document","getElementById","ReactDOM","render","setRecords","order","setOrder","AddMealForm_AddMealForm","toConsumableArray","length","AddWeightForm_AddWeightForm","List_List"],"mappings":"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","file":"static/js/main.423f4147.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./AddWeightForm.css\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport function AddWeightForm({ onAddWeight }) {\n\n  const [weight, setWeight] = useState(\"\");\n  const [unit, setUnit] = useState(\"kg\");\n  const [show, setShow] = useState(false);\n\n  const handleChange = e => {\n    setUnit(e.target.value);\n  }\n\n  const handleShow = () => {\n    setShow(true);\n  }\n\n  const handleClose = () => {\n    setShow(false);\n    setWeight(\"\");\n  }\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    unit === 'lb' ? onAddWeight(convertToKg(weight)) : onAddWeight(weight);\n    setWeight(\"\");\n    handleClose();\n  }\n\n  const convertToKg = weight => {\n    const weightInKg = weight * 0.453592;\n    return weightInKg.toFixed(2);\n  }\n\n  return (\n      <>\n        <Button variant=\"primary\" onClick={handleShow} className=\"btn btn-success\">\n          Add Weight\n        </Button>\n\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add a new weight</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={onSubmitForm}>\n              <div className=\"row\">\n              <input\n                type=\"text\"\n                className=\"form-control col-4\"\n                value={weight}\n                placeholder=\"Add a weight...\"\n                onChange={e => setWeight(e.target.value)}\n              />\n              <select value={unit} onChange={handleChange} className=\"form-control col-2\">\n                <option value=\"kg\">kg</option>\n                <option value=\"lb\">lb</option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-success\">Add weight</button>\n              </div>\n            </form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./AddMealForm.css\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport function AddMealForm({ onAddMeal }) {\n\n  const [meal, setMeal] = useState(\"\");\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => {\n    setShow(true);\n  }\n\n  const handleClose = () => {\n    setShow(false);\n    setMeal(\"\");\n  }\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    onAddMeal(meal);\n    setMeal(\"\");\n    handleClose();\n  }\n\n  return (\n      <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          Add Meal\n        </Button>\n\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add a new meal</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <form onSubmit={onSubmitForm}>\n            <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Add a meal...\"\n            value={meal}\n            onChange={e => setMeal(e.target.value)} />\n            <button type=\"submit\" className=\"btn btn-primary\">Add meal</button>\n          </form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n  );\n}\n","import React from \"react\";\nimport \"./Record.css\";\nimport 'font-awesome/css/font-awesome.min.css';\n\nexport function Record({ type, desc, date }) {\n\n  const convertToDate = ms => {\n    const date = new Date(ms);\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const month = months[date.getMonth()];\n    const day = date.getDate();\n    const year = date.getFullYear();\n    const time = date.toLocaleTimeString('en-US');\n\n    return `${month} ${day}, ${year} at ${time}`;\n  }\n\n  const convertToPounds = weight => {\n    return ( weight * 2.20462 ).toFixed(2);\n  }\n\n  const meal = <li className='meal'><i className=\"fa fa-cutlery\" aria-hidden=\"true\"></i> {desc} on <strong>{convertToDate(date)}</strong></li>;\n\n  const weight = <li className='weight'><i className=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> {desc} kg / {convertToPounds(desc)} lb on <strong>{convertToDate(date)}</strong></li>;\n\n  return (\n          (type === 'meal') ? meal : weight\n  );\n}\n","import React from \"react\";\nimport { Record } from '../../components/Record/Record';\nimport \"./List.css\";\n\nexport function List( {records, orderBy} ) {\n\n  const sortBy = orderBy === \"newest\" ? (a, b) => b.date - a.date : (a, b) => a.date - b.date;\n\n  return (\n      <ul className=\"list\">\n        {records.sort(sortBy).map(record => (\n          <Record\n          key={record.id}\n          type={record.type}\n          desc={record.desc}\n          date={record.date} />\n        ))}\n      </ul>\n  );\n\n}\n","import React, {useState, useEffect} from 'react';\n\nexport function OrderByDate( {onOrderBy} ) {\n\n  const [sortBy, setSortBy] = useState(\"newest\");\n\n  const handleOnChange = e => {\n    setSortBy(e.target.value);\n  }\n\n  useEffect(() => onOrderBy(sortBy));\n\n  return (\n    <select value={sortBy} onChange={handleOnChange} className=\"form-control\">\n      <option value=\"newest\">Date: newest first</option>\n      <option value=\"oldest\">Date: oldest first</option>\n    </select>\n  );\n}\n","import React from \"react\";\n\nexport default function Instructions() {\n  return (\n    <>\n      <p>\n        This is a health tracker. The user can track their meals and their\n        weights.\n      </p>\n      <p>\n        Following is a list of requirements. I recommend forking this sandbox,\n        but you can also download the code if you want to develop locally.\n      </p>\n      <p>\n        <a href=\"https://www.fuze.com/careers#!/job/1728384\">\n          Submit the exercise along with your resume and cover letter here.\n        </a>\n      </p>\n      <ol>\n        <li>\n          The app is functional (mostly), but it doesn't look great. Make it\n          look presentable.\n        </li>\n        <li>\n          Rather than having a list of meals and a list of weights, our design\n          team would like to have a single list with both types of elements,\n          ordered by date.\n        </li>\n        <li>\n          Our weights don't have any units. Let's store the values in kilograms\n          (to save bytes?) and allow the user to choose whether they want to use\n          pounds or kilograms.\n        </li>\n        <li>\n          Pick a requirement you think will benefit the app and implement it.\n          Use this one to show off.\n        </li>\n      </ol>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AddWeightForm } from \"./components/AddWeightForm/AddWeightForm\";\nimport { AddMealForm } from \"./components/AddMealForm/AddMealForm\"\nimport { List } from \"./components/List/List\";\nimport { OrderByDate } from \"./components/OrderByDate/OrderByDate\";\nimport Instructions from \"./Instructions\";\nimport \"./styles.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst initialRecords = [{id: 1, type:\"meal\", desc: \"Spaghetti\", date: Date.now() }, {id: 2, type:\"weight\", desc: \"100\", date: Date.now() }]\n\nfunction App() {\n  const [records, setRecords] = useState(initialRecords);\n  const [order, setOrder] = useState(\"newest\");\n\n  const onAddMeal = meal => {\n    setRecords([...records, {id: records.length + 1, type:\"meal\", desc: meal, date: Date.now() }]);\n  };\n\n  const onAddWeight = weight => {\n    setRecords([...records, {id: records.length + 1, type:\"weight\", desc: weight, date: Date.now() }]);\n  };\n\n  const onOrderBy = order => {\n    setOrder(order);\n  }\n\n  return (\n    <div className=\"App\">\n      <Instructions />\n      <h2>Health Tracker</h2>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div>\n            <AddMealForm onAddMeal={onAddMeal} />\n          </div>\n          <div>\n            <AddWeightForm onAddWeight={onAddWeight} />\n          </div>\n          <div>\n            <OrderByDate onOrderBy={onOrderBy} />\n          </div>\n        </div>\n      </div>\n      <List records={records} orderBy={order}/>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}